# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  #dimensions:
  #  columns: 0
  #  lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 6
    y: 6

  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  #decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  title: Alacritty

  # Window class (Linux/BSD only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 5000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  #auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#tabspaces: 8

# Font configuration
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofur Nerd Font
    # family: TerminessTTF Nerd Font
    # family: SauceCodePro Nerd Font
    # family: SauceCodePro Nerd Font Mono
    # family: M+ 1mn

    # family: Sarasa Mono SC Nerd
    family: Source Code Pro
    # family: Iosevka Slab
    # family: Iosevka Fixed
    # family: Iosevka Term
    # family: Iosevka Fixed SS02  # AnonymousProStyle
    # family: Iosevka Fixed SS03  # ConsolasStyle
    # family: Iosevka Fixed SS04  # MenloStyle
    # family: Iosevka Fixed SS05  # FiraMonoStyle
    # family: Iosevka Fixed SS07  # MonacoStyle
    # family: Iosevka Fixed SS09  # SourceCodeProStyle
    # family: Iosevka Fixed SS12  # UbuntuMonoStyle
    # family: Iosevka Fixed SS14  # JetBrainsMonoStyle
    # family: Iosevka Fixed SS16  # PTMonoStyle
    # family: Iosevka Fixed SS17  # RecursiveMonoStyle
    # family: mononoki

    # The `style` can be specified to pick a specific face.
    # style: Light
    style: Regular

  # Bold font face
  bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofur Nerd Font
    # family: TerminessTTF Nerd Font
    # family: SauceCodePro Nerd Font
    # family: SauceCodePro Nerd Font Mono
    # family: M+ 1mn

    # family: Sarasa Mono SC Nerd
    family: Source Code Pro
    # family: Iosevka Slab
    # family: Iosevka Fixed
    # family: Iosevka Term
    # family: Iosevka Fixed SS02  # AnonymousProStyle
    # family: Iosevka Fixed SS03  # ConsolasStyle
    # family: Iosevka Fixed SS04  # MenloStyle
    # family: Iosevka Fixed SS05  # FiraMonoStyle
    # family: Iosevka Fixed SS07  # MonacoStyle
    # family: Iosevka Fixed SS09  # SourceCodeProStyle
    # family: Iosevka Fixed SS12  # UbuntuMonoStyle
    # family: Iosevka Fixed SS14  # JetBrainsMonoStyle
    # family: Iosevka Fixed SS16  # PTMonoStyle
    # family: Iosevka Fixed SS17  # RecursiveMonoStyle
    # family: mononoki

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font
    # family: SauceCodePro Nerd Font Mono
    # family: SauceCodePro Nerd Font
    # family: M+ 1mn

    # family: Sarasa Mono SC Nerd
    family: Source Code Pro
    # family: Iosevka Slab
    # family: Iosevka Fixed
    # family: Iosevka Term
    # family: Iosevka Fixed SS02  # AnonymousProStyle
    # family: Iosevka Fixed SS03  # ConsolasStyle
    # family: Iosevka Fixed SS04  # MenloStyle
    # family: Iosevka Fixed SS05  # FiraMonoStyle
    # family: Iosevka Fixed SS07  # MonacoStyle
    # family: Iosevka Fixed SS09  # SourceCodeProStyle
    # family: Iosevka Fixed SS12  # UbuntuMonoStyle
    # family: Iosevka Fixed SS14  # JetBrainsMonoStyle
    # family: Iosevka Fixed SS16  # PTMonoStyle
    # family: Iosevka Fixed SS17  # RecursiveMonoStyle
    # family: mononoki

    # The `style` can be specified to pick a specific face.
    # style: Light Italic
    style: Italic

  # Bold italic font face
  bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    # family: SauceCodePro Nerd Font Mono
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font
    # family: SauceCodePro Nerd Font

    # family: Sarasa Mono SC Nerd
    family: Source Code Pro
    # family: Iosevka Slab
    # family: Iosevka Fixed
    # family: Iosevka Term
    # family: Iosevka Fixed SS02  # AnonymousProStyle
    # family: Iosevka Fixed SS03  # ConsolasStyle
    # family: Iosevka Fixed SS04  # MenloStyle
    # family: Iosevka Fixed SS05  # FiraMonoStyle
    # family: Iosevka Fixed SS07  # MonacoStyle
    # family: Iosevka Fixed SS09  # SourceCodeProStyle
    # family: Iosevka Fixed SS12  # UbuntuMonoStyle
    # family: Iosevka Fixed SS14  # JetBrainsMonoStyle
    # family: Iosevka Fixed SS16  # PTMonoStyle
    # family: Iosevka Fixed SS17  # RecursiveMonoStyle
    # family: mononoki

    # The `style` can be specified to pick a specific face.
    style: Bold Italic

  # Point size
  size: 14.5

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  #use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

###############################################################################
# # Colors (Gruvbox dark)
# colors:
  # # Default colors
  # primary:
    # background: '#282828'
    # foreground: '#ebdbb2'
#
    # # Bright and dim foreground colors
    # #
    # # The dimmed foreground color is calculated automatically if it is not present.
    # # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    # # is `false`, the normal foreground color will be used.
    # #dim_foreground: '#9a9a9a'
    # #bright_foreground: '#ffffff'
#
  # # Cursor colors
  # #
  # # Colors which should be used to draw the terminal cursor. If these are unset,
  # # the cursor color will be the inverse of the cell color.
  # cursor:
    # text: '#282828'
    # cursor: '#ebdbb2'
#
  # # Selection colors
  # #
  # # Colors which should be used to draw the selection area. If selection
  # # background is unset, selection color will be the inverse of the cell colors.
  # # If only text is unset the cell text color will remain the same.
  # selection:
    # text: '#ebdbb2'
    # background: '#d45e5e'
#
  # # Normal colors
  # normal:
    # black:   '#151515'
    # red:     '#cc241d'
    # green:   '#98971a'
    # yellow:  '#d79921'
    # blue:    '#458588'
    # magenta: '#b16286'
    # cyan:    '#689d6a'
    # white:   '#ebdbb2'
#
  # # Bright colors
  # bright:
    # black:   '#505050'
    # red:     '#cc241d'
    # green:   '#98971a'
    # yellow:  '#d79921'
    # blue:    '#458588'
    # magenta: '#b16286'
    # cyan:    '#689d6a'
    # white:   '#a89984'

###############################################################################
# # Colors (Gruvbox Material Dark Medium)
# colors:
  # primary:
    # background: '#282828'
    # foreground: '#dfbf8e'
#
  # normal:
    # black:   '#665c54'
    # red:     '#ea6962'
    # green:   '#a9b665'
    # yellow:  '#e78a4e'
    # blue:    '#7daea3'
    # magenta: '#d3869b'
    # cyan:    '#89b482'
    # white:   '#dfbf8e'
#
  # bright:
    # black:   '#928374'
    # red:     '#ea6962'
    # green:   '#a9b665'
    # yellow:  '#e3a84e'
    # blue:    '#7daea3'
    # magenta: '#d3869b'
    # cyan:    '#89b482'
    # white:   '#dfbf8e'
 
###############################################################################
# # Base16 Gruvbox light, soft 256 - alacritty color config
# # Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)
# colors:
  # # Default colors
  # primary:
    # background: '#f2e5bc'
    # foreground: '#504945'
#
  # # Colors the cursor will use if `custom_cursor_colors` is true
  # cursor:
    # text: '#f2e5bc'
    # cursor: '#504945'
#
  # # Normal colors
  # normal:
    # black:   '#f2e5bc'
    # red:     '#9d0006'
    # green:   '#79740e'
    # yellow:  '#b57614'
    # blue:    '#076678'
    # magenta: '#8f3f71'
    # cyan:    '#427b58'
    # white:   '#504945'
#
  # # Bright colors
  # bright:
    # black:   '#bdae93'
    # red:     '#9d0006'
    # green:   '#79740e'
    # yellow:  '#b57614'
    # blue:    '#076678'
    # magenta: '#8f3f71'
    # cyan:    '#427b58'
    # white:   '#282828'
#
  # indexed_colors:
    # - { index: 16, color: '#af3a03' }
    # - { index: 17, color: '#d65d0e' }
    # - { index: 18, color: '#ebdbb2' }
    # - { index: 19, color: '#d5c4a1' }
    # - { index: 20, color: '#665c54' }
    # - { index: 21, color: '#3c3836' }

###############################################################################
# # # Colors (Not JetBrains Dacrula dark) - alacritty color config
# colors:
  # primary:
    # background: '#282a36'
    # foreground: '#f8f8f2'
  # cursor:
    # text: CellBackground
    # cursor: CellForeground
  # vi_mode_cursor:
    # text: CellBackground
    # cursor: CellForeground
  # search:
    # matches:
      # foreground: '#44475a'
      # background: '#50fa7b'
    # focused_match:
      # foreground: '#44475a'
      # background: '#ffb86c'
    # bar:
      # background: '#282a36'
      # foreground: '#f8f8f2'
  # line_indicator:
    # foreground: None
    # background: None
  # selection:
    # text: CellForeground
    # background: '#44475a'
  # normal:
    # black:   '#000000'
    # red:     '#ff5555'
    # green:   '#50fa7b'
    # yellow:  '#f1fa8c'
    # blue:    '#bd93f9'
    # magenta: '#ff79c6'
    # cyan:    '#8be9fd'
    # white:   '#bfbfbf'
  # bright:
    # black:   '#4d4d4d'
    # red:     '#ff6e67'
    # green:   '#5af78e'
    # yellow:  '#f4f99d'
    # blue:    '#caa9fa'
    # magenta: '#ff92d0'
    # cyan:    '#9aedfe'
    # white:   '#e6e6e6'
  # dim:
    # black:   '#14151b'
    # red:     '#ff2222'
    # green:   '#1ef956'
    # yellow:  '#ebf85b'
    # blue:    '#4d5b86'
    # magenta: '#ff46b0'
    # cyan:    '#59dffc'
    # white:   '#e6e6d1'

###############################################################################
# # Colors (JetBrains Dacrula dark+++) - alacritty color config
colors:
  primary:
    background: '#2b2b2b'
    foreground: '#a9b7c6'

  cursor:
    text: CellBackground
    cursor: CellForeground
  # cursor:
    # text: '#2b2b2b'
    # cursor: '#a9b7c6'

  selection:
    # text: CellForeground
    text: '#a9b7c6'
    background: '#214283'

  normal:
    black:   '#000000'
    red:     '#e46768'
    green:   '#4e8219'
    yellow:  '#b76a18'
    blue:    '#2f70a0'
    magenta: '#5c4069'
    cyan:    '#154f4f'
    white:   '#616161'

  bright:
    black:   '#000000'
    red:     '#fb7172'
    green:   '#5b8b2c'
    yellow:  '#a5880f'
    blue:    '#3892d4'
    magenta: '#9676ac'
    cyan:    '#0cb6a4'
    white:   '#ffffff'

###############################################################################
# # Colors (Material)
# colors:
  # # Default colors
  # primary:
    # background: '#263238'
    # foreground: '#eeffff'
#
  # # Normal colors
  # normal:
    # black:   '#000000'  # Arbitrary
    # red:     '#e53935'
    # green:   '#91b859'
    # yellow:  '#ffb62c'
    # blue:    '#6182b8'
    # magenta: '#ff5370'  # Dark pink of the original material theme
    # cyan:    '#39adb5'
    # white:   '#a0a0a0'  # Arbitrary
#
  # # Bright colors
  # bright:
    # black:   '#4e4e4e'  # Arbitrary
    # red:     '#ff5370'
    # green:   '#c3e88d'
    # yellow:  '#ffcb6b'
    # blue:    '#82aaff'
    # magenta: '#f07178'  # Pink of the original material theme
    # cyan:    '#89ddff'
    # white:   '#ffffff'  # Arbitrary

###############################################################################
# # Colors (Nord)
# colors:
   # # Default colors
   # primary:
     # background: '#2E3440'
     # foreground: '#D8DEE9'
#
   # # Normal colors
   # normal:
     # black:   '#3B4252'
     # red:     '#BF616A'
     # green:   '#A3BE8C'
     # yellow:  '#EBCB8B'
     # blue:    '#81A1C1'
     # magenta: '#B48EAD'
     # cyan:    '#88C0D0'
     # white:   '#E5E9F0'
#
   # # Bright colors
   # bright:
     # black:   '#4C566A'
     # red:     '#BF616A'
     # green:   '#A3BE8C'
     # yellow:  '#EBCB8B'
     # blue:    '#81A1C1'
     # magenta: '#B48EAD'
     # cyan:    '#8FBCBB'
     # white:   '#ECEFF4'

###############################################################################
# # Colors (Solarized Light)
# colors:
  # # Default colors
  # primary:
    # background: '#fdf6e3' # base3
    # foreground: '#657b83' # base00
#
  # # Cursor colors
  # cursor:
    # text:   '#fdf6e3' # base3
    # cursor: '#657b83' # base00
#
  # # Normal colors
  # normal:
    # black:   '#073642' # base02
    # red:     '#dc322f' # red
    # green:   '#859900' # green
    # yellow:  '#b58900' # yellow
    # blue:    '#268bd2' # blue
    # magenta: '#d33682' # magenta
    # cyan:    '#2aa198' # cyan
    # white:   '#eee8d5' # base2
#
  # # Bright colors
  # bright:
    # black:   '#002b36' # base03
    # red:     '#cb4b16' # orange
    # green:   '#586e75' # base01
    # yellow:  '#657b83' # base00
    # blue:    '#839496' # base0
    # magenta: '#6c71c4' # violet
    # cyan:    '#93a1a1' # base1
    # white:   '#fdf6e3' # base3

###############################################################################
# # Colors (Solarized Dark)
# colors:
  # # Default colors
  # primary:
    # background: '#002b36' # base03
    # foreground: '#839496' # base0
#
  # # Cursor colors
  # cursor:
    # text:   '#002b36' # base03
    # cursor: '#839496' # base0
#
  # # Normal colors
  # normal:
    # black:   '#073642' # base02
    # red:     '#dc322f' # red
    # green:   '#859900' # green
    # yellow:  '#b58900' # yellow
    # blue:    '#268bd2' # blue
    # magenta: '#d33682' # magenta
    # cyan:    '#2aa198' # cyan
    # white:   '#eee8d5' # base2
#
  # # Bright colors
  # bright:
    # black:   '#002b36' # base03
    # red:     '#cb4b16' # orange
    # green:   '#586e75' # base01
    # yellow:  '#657b83' # base00
    # blue:    '#839496' # base0
    # magenta: '#6c71c4' # violet
    # cyan:    '#93a1a1' # base1
    # white:   '#fdf6e3' # base3

###############################################################################
# # Colors (Ubuntu)
# colors:
  # # Default colors
  # primary:
    # background: '#300a24'
    # foreground: '#eeeeec'
#
  # # Normal colors
  # normal:
    # black:   '#2e3436'
    # red:     '#cc0000'
    # green:   '#4e9a06'
    # yellow:  '#c4a000'
    # blue:    '#3465a4'
    # magenta: '#75507b'
    # cyan:    '#06989a'
    # white:   '#d3d7cf'
#
  # # Bright colors
  # bright:
    # black:   '#555753'
    # red:     '#ef2929'
    # green:   '#8ae234'
    # yellow:  '#fce94f'
    # blue:    '#729fcf'
    # magenta: '#ad7fa8'
    # cyan:    '#34e2e2'
    # white:   '#eeeeec'

###############################################################################
# # Colors (Pop!_OS)
# colors:
  # # Default colors
  # primary:
    # background: '#333333'
    # foreground: '#F2F2F2'
#
  # # Normal colors
  # normal:
    # black:   '#333333'
    # red:     '#CC0000'
    # green:   '#4E9A06'
    # yellow:  '#C4A000'
    # blue:    '#3465A4'
    # magenta: '#75507B'
    # cyan:    '#06989A'
    # white:   '#D3D7CF'
#
  # # Bright colors
  # bright:
    # black:   '#88807C'
    # red:     '#F15D22'
    # green:   '#73C48F'
    # yellow:  '#FFCE51'
    # blue:    '#48B9C7'
    # magenta: '#AD7FA8'
    # cyan:    '#34E2E2'
    # white:   '#EEEEEC'

###############################################################################
  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  #dim:
  #  black:   '#000000'
  #  red:     '#8c3336'
  #  green:   '#7a8530'
  #  yellow:  '#97822e'
  #  blue:    '#506d8f'
  #  magenta: '#80638e'
  #  cyan:    '#497e7a'
  #  white:   '#9a9a9a'

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '#ff00ff' }`
  #
  #indexed_colors: []

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '#ffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 1.0
# background_opacity: 0.80

#selection:
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
#dynamic_title: true

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block
  blinking: always
  blink_interval: 750
  unfocused_hollow: true

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true
# Live config reload (changes require restart)
#live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false

#mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  #hide_when_typing: false

  #url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
    # (Windows, Linux, and BSD only)
  - { key: C,        mods: Control|Shift, action: Copy             }
  - { key: V,        mods: Control|Shift, action: Paste            }
  # - { key: Insert,   mods: Shift,         action: PasteSelection   }
  - { key: Key0,     mods: Control,       action: ResetFontSize    }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }
  # - { key: Plus,     mods: Control,       action: IncreaseFontSize }

  - { key: Paste,                    action: Paste                      }
  - { key: Copy,                     action: Copy                       }
  # - { key: L,         mods: Control, action: ClearLogNotice                   }
  # - { key: L,         mods: Control, chars: "\x0c"                            }
  - { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt }
  - { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt }
  - { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt }
  - { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt }
  - { key: Up,        mods: Control|Shift,   action: ScrollLineUp,   mode: ~Alt }
  - { key: Down,      mods: Control|Shift,   action: ScrollLineDown, mode: ~Alt }
  - { key: Return,    mods: Control|Shift,   action: SpawnNewInstance }
